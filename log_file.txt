my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
my_function error: test_log_lack_argument.<locals>.my_function() missing 1 required positional argument: 'y'. Inputs:(1,), {}
my_function error: unsupported operand type(s) for +: 'int' and 'str'. Inputs:(1, ''), {}
my_function error: test_log_different_types_no_argument.<locals>.my_function() missing 2 required positional arguments: 'x' and 'y'. Inputs:(), {}
my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
my_function error: test_log_lack_argument.<locals>.my_function() missing 1 required positional argument: 'y'. Inputs:(1,), {}
my_function error: unsupported operand type(s) for +: 'int' and 'str'. Inputs:(1, ''), {}
my_function error: test_log_different_types_no_argument.<locals>.my_function() missing 2 required positional arguments: 'x' and 'y'. Inputs:(), {}
my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
my_function called with args: ('1', '2'), kwargs:{}. Result: 12
my_function error: unsupported operand type(s) for +: 'int' and 'str'. Inputs:(1, '2'), {}
my_function called with args: (1, 5), kwargs:{}. Result: 6
my_function error: can only concatenate str (not "int") to str. Inputs:('1', 5), {}
my_function called with args: ('1', 5), kwargs:{}. Result: None
my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
my_function called with args: (1, 2), kwargs:{}. Result: 3
my_function called with args: ('a', 'b'), kwargs:{}. Result: ab
